{"meta":{"title":"Don't BB,show me the code!","subtitle":null,"description":null,"author":"Nicolas","url":"http://NicolasGui.github.io"},"pages":[{"title":"Home","date":"2017-11-18T09:53:31.000Z","updated":"2017-11-18T09:53:31.646Z","comments":true,"path":"Home/index.html","permalink":"http://NicolasGui.github.io/Home/index.html","excerpt":"","text":""},{"title":"读书","date":"2017-11-27T14:50:24.651Z","updated":"2017-11-27T14:47:51.625Z","comments":true,"path":"reading/index.html","permalink":"http://NicolasGui.github.io/reading/index.html","excerpt":"","text":""},{"title":"Categories","date":"2017-11-29T02:51:49.000Z","updated":"2017-11-29T02:51:49.260Z","comments":true,"path":"Categories/index.html","permalink":"http://NicolasGui.github.io/Categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-11-18T09:52:31.000Z","updated":"2017-11-18T09:52:31.247Z","comments":true,"path":"tags/index.html","permalink":"http://NicolasGui.github.io/tags/index.html","excerpt":"","text":""},{"title":"works","date":"2017-11-18T09:53:14.000Z","updated":"2017-11-18T09:53:14.801Z","comments":true,"path":"works/index.html","permalink":"http://NicolasGui.github.io/works/index.html","excerpt":"","text":""},{"title":"FrontEndGuide","date":"2017-11-18T09:53:02.000Z","updated":"2017-11-18T09:53:02.800Z","comments":true,"path":"FrontEndGuide/index.html","permalink":"http://NicolasGui.github.io/FrontEndGuide/index.html","excerpt":"","text":""},{"title":"关于","date":"2017-11-27T14:50:24.631Z","updated":"2017-11-27T14:47:51.624Z","comments":true,"path":"about/index.html","permalink":"http://NicolasGui.github.io/about/index.html","excerpt":"","text":"大家好，我是XXX。欢迎来到我的个人技术博客。 这里用markdown写下你的简介，就跟平时写md一样就可以了。"}],"posts":[{"title":"Hexo+Github搭建个人博客","slug":"Hexo+Github搭建个人博客","date":"2017-10-26T07:19:12.000Z","updated":"2017-11-29T11:05:22.000Z","comments":true,"path":"2017/10/26/Hexo+Github搭建个人博客/","link":"","permalink":"http://NicolasGui.github.io/2017/10/26/Hexo+Github搭建个人博客/","excerpt":"","text":"欢迎来到我的博客驿站，本站是使用Hexo+Github基于基于Node.js的静态博客框架, 官方文档请参考Hexo Quick Start环境要求安装Node（基础环境）Node官网你可以根据不同平台系统选择你需要的Node.js安装包注意：Linux上安装Node.js需要安装Python 2.6 或 2.7 ，不建议安装Python 3.0以上版本。 安装Git目的：把本地的hexo内容提交到github上去.首先去GitHub申请个人账号，以便后期用来做博客的远程创库、域名、服务器之类的，github账号不再啰嗦了,跟一般的注册账号差不多，方便起见，顺便配置SSH Keys 安装Hexo开始之前，先切换NPM源， 解释一下，NPM是随同 NodeJS 一起安装的包管理工具，我们经常使用它来下载第三方包到本地。但在使用 NPM 过程很多人估计都知道，在国内下载第三方包的速度极其之慢。因此推荐使用淘宝 NPM 镜像，它是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 ，操作如下：终端/CMD里面：1$ npm install -g cnpm --registry=https://registry.npm.taobao.org 如此一来就可以使用 cnpm 命令来安装模块了：1$ cnpm install xxxx 接下来开始安装Hexo，首先在你个人的workspace创建博客文件夹，如myblog然后cd到myblog里安装Hexo：1$ cnpm install -g hexo-cli 接下来执行init命令初始化你的hexo：1$ hexo init 至此，安装工作顺利完成！myblog就是你以后写博客的目录，所有的操作都在里面进行。 生成博客1$ hexo g 预览博客1$ hexo s 接下来在浏览器地址栏输入：localhost:4000回车就可以预览你的博客了 发布博客1$ hexo d 托管到gitHub创建repository创建一个与自己用户名同名的repository在自己Github主页右下角，创建一个新的repository。比如我的Github账号是NicolasGui，那么我应该创建的repository名字应该是NicolasGui.github.io。 添加git配置首先在主题的配置文件_config.yml里面添加1234deploy: type: git repository: http://github.com/NicolasGui/NicolasGui.github.io.git branch: master repository：就是你的gitHub同名仓库的地址 代码上传安装 hexo-deployer-git依赖包1npm install hexo-deployer-git --save 然后使用如下命令 1hexo d 此时你可以在浏览器地址栏输入 “用户名.github.io.git”来访问你的个人博客(用户名：你gitHub的用户名) 域名绑定域名申请域名申请的途径非常多，建议使用阿里云的，方便后期备案，在阿里云购买了域名之后，到域名管理中心进行域名解析，添加以下几条记录值： 记录类型 主机记录 解析线路(isp) 记录值 CNAME www 默认 用户名.github.io A @ 默认 192.30.252.153 A @ 默认 192.30.252.154 接下来在public目录新建名为CNAME的文件，注意，没有后缀名然后在CNAME文件里面填写你的域名，如：xxx.com 注意：不带www也不带http，只需要域名就好接下来分别执行hexo g重新生成一下博客1hexo g 然后再上传到git1hexo d 之后就可以使用域名访问你的个人博客了","categories":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/categories/All/"},{"name":"Hexo","slug":"All/Hexo","permalink":"http://NicolasGui.github.io/categories/All/Hexo/"}],"tags":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/tags/All/"},{"name":"Hexo","slug":"Hexo","permalink":"http://NicolasGui.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"http://NicolasGui.github.io/tags/Github/"}],"keywords":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/categories/All/"},{"name":"Hexo","slug":"All/Hexo","permalink":"http://NicolasGui.github.io/categories/All/Hexo/"}]},{"title":"前端常用开发工具","slug":"前端开发工具","date":"2017-04-26T07:02:29.000Z","updated":"2017-11-29T11:26:37.000Z","comments":true,"path":"2017/04/26/前端开发工具/","link":"","permalink":"http://NicolasGui.github.io/2017/04/26/前端开发工具/","excerpt":"","text":"简介本文分享了前端常用开发工具以及在开发/过程中常用软件，收费软件附带破解，免费且百度能下载的软件烦请自行百度下载 软件列表开发类 Webstrom editplus JDK1.7 adt-bundle MindManager Fireworks_cs6 Adobe Photoshop CC 2017 代码压缩工具 node6.10 颜色拾取器 xampp topspeeder AxureRP-Pro 办公类 wps Microsoft Office 2016 pdf 系统工具类 Microsoft.framework4.0 winrar 百度网盘地址：点我 ,密码：9h7i","categories":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/categories/All/"},{"name":"tools","slug":"All/tools","permalink":"http://NicolasGui.github.io/categories/All/tools/"}],"tags":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/tags/All/"},{"name":"web前端","slug":"web前端","permalink":"http://NicolasGui.github.io/tags/web前端/"},{"name":"开发工具","slug":"开发工具","permalink":"http://NicolasGui.github.io/tags/开发工具/"}],"keywords":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/categories/All/"},{"name":"tools","slug":"All/tools","permalink":"http://NicolasGui.github.io/categories/All/tools/"}]},{"title":"使用mac自带阿帕奇","slug":"使用mac自带阿帕奇","date":"2017-02-24T07:02:29.000Z","updated":"2017-11-29T11:05:42.000Z","comments":true,"path":"2017/02/24/使用mac自带阿帕奇/","link":"","permalink":"http://NicolasGui.github.io/2017/02/24/使用mac自带阿帕奇/","excerpt":"","text":"简介Apache对于前端程序员来说是必不可少的一款web服务器，Mac系统自身带了apache，可以直接用来搭建本地web服务器，配置过程相对比较简单，本文将做简要描述，开始吧 启动Apachemac是默认自动启动Apache的，判断mac是否启动了Apache很简单，浏览器地址栏输入http://127.0.0.1 回车即可，如果页面显示It works！证明ok，介绍几个常用命令： 12345sudo apachectl start //开启apachesudo apachectl restart //重启apachesudo apachectl stop //关闭apache: 基本配置更改work spaceApache在Windows下默认work space为htdocs，在mac下有所区别，路径为：/Library/WebServer/Documents因此我们需要把前端代码拷贝到该目录进行测试，但是该目录藏这么深在实际使用过程中显然是比较麻烦的，因此接下来我们通过修改阿帕奇主配置文件httpd.conf来指定work space，步骤如下：mac配置文件目录为：/etc ，默认是隐藏的，因此咱们在终端里面执行：open /etc/apache2/ 就可以打开Apache主目录，找到httpd.conf文件，使用文本编辑器打开该文件， 如果不想那么麻烦的话可以使用vi编辑，命令如下： 1sudo vi /etc/apache2/httpd.conf 编辑以下内容，原本为：12DocumentRoot \"/Library/WebServer/Documents\"&lt;Directory \"/Library/WebServer/Documents\"&gt; 修改为自定义目录，比如我改成根目录的sites文件夹，那就是：12DocumentRoot \"/Users/用户名/Sites\"&lt;Directory \"/Users/用户名/Sites\"&gt; 这样子的话我们就可以把Apache的work space更改到根路径下的sites了，需要注意的是，如果使用sudo vi /etc/apache2/httpd.conf命令打开，那么你需要先按一下i才能编辑，编辑完了以后按下esc，然后输入:wq回车就可以保存退出了 更改默认端口跟更改默认工作空间一样的方式打开httpd.conf，找到Listen 80这一行，将80改为你需要的端口就好 显示文件目录Apache在没有index的情况下默认不会显示文件目录，可以通过修改httpd.conf实现文件列表的展示，方便调试操作如下：将httpd.conf里面Options FollowSymLinks Multiviews之后加上Indexes，修改之后为1Options FollowSymLinks Multiviews Indexes","categories":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/categories/All/"},{"name":"mac","slug":"All/mac","permalink":"http://NicolasGui.github.io/categories/All/mac/"}],"tags":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/tags/All/"},{"name":"mac","slug":"mac","permalink":"http://NicolasGui.github.io/tags/mac/"},{"name":"服务器","slug":"服务器","permalink":"http://NicolasGui.github.io/tags/服务器/"}],"keywords":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/categories/All/"},{"name":"mac","slug":"All/mac","permalink":"http://NicolasGui.github.io/categories/All/mac/"}]},{"title":"vue-router插件","slug":"vue-router","date":"2017-01-26T07:02:29.000Z","updated":"2017-11-29T11:05:28.000Z","comments":true,"path":"2017/01/26/vue-router/","link":"","permalink":"http://NicolasGui.github.io/2017/01/26/vue-router/","excerpt":"","text":"简介vue-router就是SPA（单页应用）的路径管理器。通俗的说，vue-router就是我们WebApp的链接路径管理系统。它跟前端的a标签区别是什么？因为我们用Vue做的是单页应用，就相当于只有一个主的index.html页面，所以你写的a标签是不起作用的，你必须使用vue-router来对路径进行管理。 安装vue-routervue-router是一个插件，所以需要用npm来进行安装的。在命令行工具里面，进入你的项目目录，输入下面命令。1npm install vue-router --save 如果你是通过vue-cli构建项目时已经选择安装了vue-router，那就不需要重复安装。如果npm install vue-router –save安装比较慢的话，切换到淘宝镜像然后使用cnpm install vue-router –save，切换方法如下：1npm install -g cnpm --registry=https://registry.npm.taobao.org vue-router文件解读安装完vue-router，我们先在src/router/路径下找到index.js文件，这个js就是路由的核心文件，打开1234567891011121314151617181920import Vue from 'vue' //引入Vueimport Router from 'vue-router' //引入vue-routerimport Hello from '@/components/Hello' //引入默认的Hello.vue组件import Test from '@/components/Test' //引入测试vue组件Vue.use(Router) //全局使用Router export default new Router(&#123;//配置路由 routes: [ &#123; //每一个对象代表一个路由 path: '/', //链接路径 name: 'Hello', //路由名称， component: Hello //对应的组件模板 &#125;,&#123; path:'/Test', name:'Test', component:Test &#125; ]&#125;) 然后我们就可以在App.vue里面通过router-view来展示我们的组件内容 router-link我们说router是做路径管理的，那么我们就可以通过router-link来控制组件的切换1&lt;router-link to=\"组件路径\"&gt;链接内容&lt;/router-link&gt; 在这里解释一下，to：是我们的导航路径，要填写的是你在router/index.js文件里配置的path值，如果要导航到默认首页，只需要写成 to=”/” ，比如：1234&lt;ul&gt; &lt;li&gt;&lt;router-link to=\"/\"&gt;首页&lt;/router-link&gt;&lt;/li&gt; &lt;li&gt;&lt;router-link to=\"/Test\"&gt;Test页面&lt;/router-link&gt;&lt;/li&gt; &lt;/ul&gt;","categories":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/categories/All/"},{"name":"vue","slug":"All/vue","permalink":"http://NicolasGui.github.io/categories/All/vue/"}],"tags":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/tags/All/"},{"name":"vue","slug":"vue","permalink":"http://NicolasGui.github.io/tags/vue/"},{"name":"web前端","slug":"web前端","permalink":"http://NicolasGui.github.io/tags/web前端/"},{"name":"路由","slug":"路由","permalink":"http://NicolasGui.github.io/tags/路由/"}],"keywords":[{"name":"All","slug":"All","permalink":"http://NicolasGui.github.io/categories/All/"},{"name":"vue","slug":"All/vue","permalink":"http://NicolasGui.github.io/categories/All/vue/"}]}]}